// Generated from /home/dregos/Uni/CPL/teme/Tema2/src/cool/lexer/CoolLexer.g4 by ANTLR 4.13.1

package cool.lexer;
import java.util.HashMap;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, WS=2, CLASS=3, IF=4, THEN=5, ELSE=6, FI=7, BOOL=8, TYPE=9, NOT=10, 
		NEW=11, LET=12, IN=13, WHILE=14, LOOP=15, POOL=16, CASE=17, OF=18, RESULTS=19, 
		ESAC=20, INHERITS=21, AT=22, ISVOID=23, POINT=24, ID=25, INT=26, STRING=27, 
		LINE_COMMENT=28, SEMI=29, COLON=30, COMMA=31, ASSIGN=32, EQUAL=33, LPAREN=34, 
		RPAREN=35, LBRACE=36, RBRACE=37, PLUS=38, MINUS=39, MULT=40, DIV=41, LT=42, 
		LE=43, TILDA=44, BLOCK_COMMENT=45, END_BLOCK_COMMENT=46, INVALID_CHARACTER=47;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"WS", "CLASS", "IF", "THEN", "ELSE", "FI", "BOOL", "LETTER", "DIGIT", 
			"TYPE", "NOT", "NEW", "LET", "IN", "WHILE", "LOOP", "POOL", "CASE", "OF", 
			"RESULTS", "ESAC", "INHERITS", "AT", "ISVOID", "POINT", "ID", "INT", 
			"STRING", "NEW_LINE", "LINE_COMMENT", "SEMI", "COLON", "COMMA", "ASSIGN", 
			"EQUAL", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", "MULT", 
			"DIV", "LT", "LE", "TILDA", "BLOCK_COMMENT", "END_BLOCK_COMMENT", "INVALID_CHARACTER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'class'", "'if'", "'then'", "'else'", "'fi'", null, 
			null, "'not'", "'new'", "'let'", "'in'", "'while'", "'loop'", "'pool'", 
			"'case'", "'of'", "'=>'", "'esac'", "'inherits'", "'@'", "'isvoid'", 
			"'.'", null, null, null, null, "';'", "':'", "','", "'<-'", "'='", "'('", 
			"')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", "'<'", "'<='", "'~'", 
			null, "'*)'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "WS", "CLASS", "IF", "THEN", "ELSE", "FI", "BOOL", "TYPE", 
			"NOT", "NEW", "LET", "IN", "WHILE", "LOOP", "POOL", "CASE", "OF", "RESULTS", 
			"ESAC", "INHERITS", "AT", "ISVOID", "POINT", "ID", "INT", "STRING", "LINE_COMMENT", 
			"SEMI", "COLON", "COMMA", "ASSIGN", "EQUAL", "LPAREN", "RPAREN", "LBRACE", 
			"RBRACE", "PLUS", "MINUS", "MULT", "DIV", "LT", "LE", "TILDA", "BLOCK_COMMENT", 
			"END_BLOCK_COMMENT", "INVALID_CHARACTER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	    
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 27:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 46:
			BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 47:
			END_BLOCK_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 48:
			INVALID_CHARACTER_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

			                    String text = getText();
			                    HashMap<CharSequence, CharSequence> backslash_sequences = new HashMap<>() {{
			                        put("\\n", "\n");
			                    	put("\\b", "\b");
			                        put("\\f", "\f");
			                        put("\\t", "\t");
			                    }};
			                    text = text.substring(1, text.length() - 1);
			                    for (var entry : backslash_sequences.entrySet()) {
			                        text = text.replace(entry.getKey(), entry.getValue());
			                    }
			                    for (int i = 0; i < text.length(); i++) {
			                        if (text.charAt(i) == '\\' && text.charAt(i + 1) != '\\') {
			                            text = text.substring(0, i) + text.substring(i + 1);
			                        }
			                    }
			                    if (text.length() >= 1024) {
			                        raiseError("String constant too long");
			                        return;
			                    }
			                    setText(text);
			                
			break;
		case 1:
			 raiseError("Unterminated string constant");
			break;
		case 2:
			 raiseError("String contains null character");
			break;
		case 3:
			 raiseError("EOF in string constant"); 
			break;
		}
	}
	private void BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4:
			 raiseError("EOF in comment"); 
			break;
		case 5:
			skip();
			break;
		}
	}
	private void END_BLOCK_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 6:
			raiseError("Unmatched *)");
			break;
		}
	}
	private void INVALID_CHARACTER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 7:
			 raiseError("Invalid character: " + getText()); 
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000/\u016d\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u0001\u0000\u0004\u0000e\b\u0000\u000b\u0000\f\u0000f\u0001\u0000\u0001"+
		"\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0003\u0006\u008a\b\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0005"+
		"\t\u00a9\b\t\n\t\f\t\u00ac\t\t\u0003\t\u00ae\b\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0005"+
		"\u0019\u00f7\b\u0019\n\u0019\f\u0019\u00fa\t\u0019\u0001\u001a\u0004\u001a"+
		"\u00fd\b\u001a\u000b\u001a\f\u001a\u00fe\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0005\u001b\u0107\b\u001b\n"+
		"\u001b\f\u001b\u010a\t\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0005\u001b\u0113\b\u001b\n"+
		"\u001b\f\u001b\u0116\t\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0003\u001b\u011c\b\u001b\u0001\u001c\u0003\u001c\u011f\b\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0005\u001d\u0127\b\u001d\n\u001d\f\u001d\u012a\t\u001d\u0001\u001d\u0001"+
		"\u001d\u0003\u001d\u012e\b\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001!\u0001"+
		"\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001"+
		"\'\u0001\'\u0001(\u0001(\u0001)\u0001)\u0001*\u0001*\u0001+\u0001+\u0001"+
		",\u0001,\u0001,\u0001-\u0001-\u0001.\u0001.\u0001.\u0001.\u0001.\u0005"+
		".\u0159\b.\n.\f.\u015c\t.\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0003"+
		".\u0164\b.\u0001/\u0001/\u0001/\u0001/\u0001/\u00010\u00010\u00010\u0004"+
		"\u0108\u0114\u0128\u015a\u00001\u0001\u0002\u0003\u0003\u0005\u0004\u0007"+
		"\u0005\t\u0006\u000b\u0007\r\b\u000f\u0000\u0011\u0000\u0013\t\u0015\n"+
		"\u0017\u000b\u0019\f\u001b\r\u001d\u000e\u001f\u000f!\u0010#\u0011%\u0012"+
		"\'\u0013)\u0014+\u0015-\u0016/\u00171\u00183\u00195\u001a7\u001b9\u0000"+
		";\u001c=\u001d?\u001eA\u001fC E!G\"I#K$M%O&Q\'S(U)W*Y+[,]-_.a/\u0001\u0000"+
		"\u0005\u0003\u0000\t\n\f\r  \u0002\u0000AZaz\u0001\u000009\u0001\u0000"+
		"AZ\u0001\u0000az\u0184\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000"+
		")\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001"+
		"\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000"+
		"\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u0000"+
		"7\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001"+
		"\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000"+
		"\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000"+
		"G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001"+
		"\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000"+
		"\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000"+
		"U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000Y\u0001"+
		"\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000]\u0001\u0000\u0000"+
		"\u0000\u0000_\u0001\u0000\u0000\u0000\u0000a\u0001\u0000\u0000\u0000\u0001"+
		"d\u0001\u0000\u0000\u0000\u0003j\u0001\u0000\u0000\u0000\u0005p\u0001"+
		"\u0000\u0000\u0000\u0007s\u0001\u0000\u0000\u0000\tx\u0001\u0000\u0000"+
		"\u0000\u000b}\u0001\u0000\u0000\u0000\r\u0089\u0001\u0000\u0000\u0000"+
		"\u000f\u008b\u0001\u0000\u0000\u0000\u0011\u008d\u0001\u0000\u0000\u0000"+
		"\u0013\u00ad\u0001\u0000\u0000\u0000\u0015\u00af\u0001\u0000\u0000\u0000"+
		"\u0017\u00b3\u0001\u0000\u0000\u0000\u0019\u00b7\u0001\u0000\u0000\u0000"+
		"\u001b\u00bb\u0001\u0000\u0000\u0000\u001d\u00be\u0001\u0000\u0000\u0000"+
		"\u001f\u00c4\u0001\u0000\u0000\u0000!\u00c9\u0001\u0000\u0000\u0000#\u00ce"+
		"\u0001\u0000\u0000\u0000%\u00d3\u0001\u0000\u0000\u0000\'\u00d6\u0001"+
		"\u0000\u0000\u0000)\u00d9\u0001\u0000\u0000\u0000+\u00de\u0001\u0000\u0000"+
		"\u0000-\u00e7\u0001\u0000\u0000\u0000/\u00e9\u0001\u0000\u0000\u00001"+
		"\u00f0\u0001\u0000\u0000\u00003\u00f2\u0001\u0000\u0000\u00005\u00fc\u0001"+
		"\u0000\u0000\u00007\u0100\u0001\u0000\u0000\u00009\u011e\u0001\u0000\u0000"+
		"\u0000;\u0122\u0001\u0000\u0000\u0000=\u0131\u0001\u0000\u0000\u0000?"+
		"\u0133\u0001\u0000\u0000\u0000A\u0135\u0001\u0000\u0000\u0000C\u0137\u0001"+
		"\u0000\u0000\u0000E\u013a\u0001\u0000\u0000\u0000G\u013c\u0001\u0000\u0000"+
		"\u0000I\u013e\u0001\u0000\u0000\u0000K\u0140\u0001\u0000\u0000\u0000M"+
		"\u0142\u0001\u0000\u0000\u0000O\u0144\u0001\u0000\u0000\u0000Q\u0146\u0001"+
		"\u0000\u0000\u0000S\u0148\u0001\u0000\u0000\u0000U\u014a\u0001\u0000\u0000"+
		"\u0000W\u014c\u0001\u0000\u0000\u0000Y\u014e\u0001\u0000\u0000\u0000["+
		"\u0151\u0001\u0000\u0000\u0000]\u0153\u0001\u0000\u0000\u0000_\u0165\u0001"+
		"\u0000\u0000\u0000a\u016a\u0001\u0000\u0000\u0000ce\u0007\u0000\u0000"+
		"\u0000dc\u0001\u0000\u0000\u0000ef\u0001\u0000\u0000\u0000fd\u0001\u0000"+
		"\u0000\u0000fg\u0001\u0000\u0000\u0000gh\u0001\u0000\u0000\u0000hi\u0006"+
		"\u0000\u0000\u0000i\u0002\u0001\u0000\u0000\u0000jk\u0005c\u0000\u0000"+
		"kl\u0005l\u0000\u0000lm\u0005a\u0000\u0000mn\u0005s\u0000\u0000no\u0005"+
		"s\u0000\u0000o\u0004\u0001\u0000\u0000\u0000pq\u0005i\u0000\u0000qr\u0005"+
		"f\u0000\u0000r\u0006\u0001\u0000\u0000\u0000st\u0005t\u0000\u0000tu\u0005"+
		"h\u0000\u0000uv\u0005e\u0000\u0000vw\u0005n\u0000\u0000w\b\u0001\u0000"+
		"\u0000\u0000xy\u0005e\u0000\u0000yz\u0005l\u0000\u0000z{\u0005s\u0000"+
		"\u0000{|\u0005e\u0000\u0000|\n\u0001\u0000\u0000\u0000}~\u0005f\u0000"+
		"\u0000~\u007f\u0005i\u0000\u0000\u007f\f\u0001\u0000\u0000\u0000\u0080"+
		"\u0081\u0005t\u0000\u0000\u0081\u0082\u0005r\u0000\u0000\u0082\u0083\u0005"+
		"u\u0000\u0000\u0083\u008a\u0005e\u0000\u0000\u0084\u0085\u0005f\u0000"+
		"\u0000\u0085\u0086\u0005a\u0000\u0000\u0086\u0087\u0005l\u0000\u0000\u0087"+
		"\u0088\u0005s\u0000\u0000\u0088\u008a\u0005e\u0000\u0000\u0089\u0080\u0001"+
		"\u0000\u0000\u0000\u0089\u0084\u0001\u0000\u0000\u0000\u008a\u000e\u0001"+
		"\u0000\u0000\u0000\u008b\u008c\u0007\u0001\u0000\u0000\u008c\u0010\u0001"+
		"\u0000\u0000\u0000\u008d\u008e\u0007\u0002\u0000\u0000\u008e\u0012\u0001"+
		"\u0000\u0000\u0000\u008f\u0090\u0005I\u0000\u0000\u0090\u0091\u0005n\u0000"+
		"\u0000\u0091\u00ae\u0005t\u0000\u0000\u0092\u0093\u0005S\u0000\u0000\u0093"+
		"\u0094\u0005t\u0000\u0000\u0094\u0095\u0005r\u0000\u0000\u0095\u0096\u0005"+
		"i\u0000\u0000\u0096\u0097\u0005n\u0000\u0000\u0097\u00ae\u0005g\u0000"+
		"\u0000\u0098\u0099\u0005B\u0000\u0000\u0099\u009a\u0005o\u0000\u0000\u009a"+
		"\u009b\u0005o\u0000\u0000\u009b\u00ae\u0005l\u0000\u0000\u009c\u009d\u0005"+
		"O\u0000\u0000\u009d\u009e\u0005b\u0000\u0000\u009e\u009f\u0005j\u0000"+
		"\u0000\u009f\u00a0\u0005e\u0000\u0000\u00a0\u00a1\u0005c\u0000\u0000\u00a1"+
		"\u00ae\u0005t\u0000\u0000\u00a2\u00a3\u0005I\u0000\u0000\u00a3\u00ae\u0005"+
		"O\u0000\u0000\u00a4\u00aa\u0007\u0003\u0000\u0000\u00a5\u00a9\u0003\u000f"+
		"\u0007\u0000\u00a6\u00a9\u0005_\u0000\u0000\u00a7\u00a9\u0003\u0011\b"+
		"\u0000\u00a8\u00a5\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9\u00ac\u0001\u0000\u0000"+
		"\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000"+
		"\u0000\u00ad\u008f\u0001\u0000\u0000\u0000\u00ad\u0092\u0001\u0000\u0000"+
		"\u0000\u00ad\u0098\u0001\u0000\u0000\u0000\u00ad\u009c\u0001\u0000\u0000"+
		"\u0000\u00ad\u00a2\u0001\u0000\u0000\u0000\u00ad\u00a4\u0001\u0000\u0000"+
		"\u0000\u00ae\u0014\u0001\u0000\u0000\u0000\u00af\u00b0\u0005n\u0000\u0000"+
		"\u00b0\u00b1\u0005o\u0000\u0000\u00b1\u00b2\u0005t\u0000\u0000\u00b2\u0016"+
		"\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005n\u0000\u0000\u00b4\u00b5\u0005"+
		"e\u0000\u0000\u00b5\u00b6\u0005w\u0000\u0000\u00b6\u0018\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b8\u0005l\u0000\u0000\u00b8\u00b9\u0005e\u0000\u0000\u00b9"+
		"\u00ba\u0005t\u0000\u0000\u00ba\u001a\u0001\u0000\u0000\u0000\u00bb\u00bc"+
		"\u0005i\u0000\u0000\u00bc\u00bd\u0005n\u0000\u0000\u00bd\u001c\u0001\u0000"+
		"\u0000\u0000\u00be\u00bf\u0005w\u0000\u0000\u00bf\u00c0\u0005h\u0000\u0000"+
		"\u00c0\u00c1\u0005i\u0000\u0000\u00c1\u00c2\u0005l\u0000\u0000\u00c2\u00c3"+
		"\u0005e\u0000\u0000\u00c3\u001e\u0001\u0000\u0000\u0000\u00c4\u00c5\u0005"+
		"l\u0000\u0000\u00c5\u00c6\u0005o\u0000\u0000\u00c6\u00c7\u0005o\u0000"+
		"\u0000\u00c7\u00c8\u0005p\u0000\u0000\u00c8 \u0001\u0000\u0000\u0000\u00c9"+
		"\u00ca\u0005p\u0000\u0000\u00ca\u00cb\u0005o\u0000\u0000\u00cb\u00cc\u0005"+
		"o\u0000\u0000\u00cc\u00cd\u0005l\u0000\u0000\u00cd\"\u0001\u0000\u0000"+
		"\u0000\u00ce\u00cf\u0005c\u0000\u0000\u00cf\u00d0\u0005a\u0000\u0000\u00d0"+
		"\u00d1\u0005s\u0000\u0000\u00d1\u00d2\u0005e\u0000\u0000\u00d2$\u0001"+
		"\u0000\u0000\u0000\u00d3\u00d4\u0005o\u0000\u0000\u00d4\u00d5\u0005f\u0000"+
		"\u0000\u00d5&\u0001\u0000\u0000\u0000\u00d6\u00d7\u0005=\u0000\u0000\u00d7"+
		"\u00d8\u0005>\u0000\u0000\u00d8(\u0001\u0000\u0000\u0000\u00d9\u00da\u0005"+
		"e\u0000\u0000\u00da\u00db\u0005s\u0000\u0000\u00db\u00dc\u0005a\u0000"+
		"\u0000\u00dc\u00dd\u0005c\u0000\u0000\u00dd*\u0001\u0000\u0000\u0000\u00de"+
		"\u00df\u0005i\u0000\u0000\u00df\u00e0\u0005n\u0000\u0000\u00e0\u00e1\u0005"+
		"h\u0000\u0000\u00e1\u00e2\u0005e\u0000\u0000\u00e2\u00e3\u0005r\u0000"+
		"\u0000\u00e3\u00e4\u0005i\u0000\u0000\u00e4\u00e5\u0005t\u0000\u0000\u00e5"+
		"\u00e6\u0005s\u0000\u0000\u00e6,\u0001\u0000\u0000\u0000\u00e7\u00e8\u0005"+
		"@\u0000\u0000\u00e8.\u0001\u0000\u0000\u0000\u00e9\u00ea\u0005i\u0000"+
		"\u0000\u00ea\u00eb\u0005s\u0000\u0000\u00eb\u00ec\u0005v\u0000\u0000\u00ec"+
		"\u00ed\u0005o\u0000\u0000\u00ed\u00ee\u0005i\u0000\u0000\u00ee\u00ef\u0005"+
		"d\u0000\u0000\u00ef0\u0001\u0000\u0000\u0000\u00f0\u00f1\u0005.\u0000"+
		"\u0000\u00f12\u0001\u0000\u0000\u0000\u00f2\u00f8\u0007\u0004\u0000\u0000"+
		"\u00f3\u00f7\u0003\u000f\u0007\u0000\u00f4\u00f7\u0005_\u0000\u0000\u00f5"+
		"\u00f7\u0003\u0011\b\u0000\u00f6\u00f3\u0001\u0000\u0000\u0000\u00f6\u00f4"+
		"\u0001\u0000\u0000\u0000\u00f6\u00f5\u0001\u0000\u0000\u0000\u00f7\u00fa"+
		"\u0001\u0000\u0000\u0000\u00f8\u00f6\u0001\u0000\u0000\u0000\u00f8\u00f9"+
		"\u0001\u0000\u0000\u0000\u00f94\u0001\u0000\u0000\u0000\u00fa\u00f8\u0001"+
		"\u0000\u0000\u0000\u00fb\u00fd\u0003\u0011\b\u0000\u00fc\u00fb\u0001\u0000"+
		"\u0000\u0000\u00fd\u00fe\u0001\u0000\u0000\u0000\u00fe\u00fc\u0001\u0000"+
		"\u0000\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000\u00ff6\u0001\u0000\u0000"+
		"\u0000\u0100\u0108\u0005\"\u0000\u0000\u0101\u0102\u0005\\\u0000\u0000"+
		"\u0102\u0107\u0005\"\u0000\u0000\u0103\u0104\u0005\\\u0000\u0000\u0104"+
		"\u0107\u00039\u001c\u0000\u0105\u0107\t\u0000\u0000\u0000\u0106\u0101"+
		"\u0001\u0000\u0000\u0000\u0106\u0103\u0001\u0000\u0000\u0000\u0106\u0105"+
		"\u0001\u0000\u0000\u0000\u0107\u010a\u0001\u0000\u0000\u0000\u0108\u0109"+
		"\u0001\u0000\u0000\u0000\u0108\u0106\u0001\u0000\u0000\u0000\u0109\u011b"+
		"\u0001\u0000\u0000\u0000\u010a\u0108\u0001\u0000\u0000\u0000\u010b\u010c"+
		"\u0005\"\u0000\u0000\u010c\u011c\u0006\u001b\u0001\u0000\u010d\u010e\u0003"+
		"9\u001c\u0000\u010e\u010f\u0006\u001b\u0002\u0000\u010f\u011c\u0001\u0000"+
		"\u0000\u0000\u0110\u0114\u0005\u0000\u0000\u0000\u0111\u0113\t\u0000\u0000"+
		"\u0000\u0112\u0111\u0001\u0000\u0000\u0000\u0113\u0116\u0001\u0000\u0000"+
		"\u0000\u0114\u0115\u0001\u0000\u0000\u0000\u0114\u0112\u0001\u0000\u0000"+
		"\u0000\u0115\u0117\u0001\u0000\u0000\u0000\u0116\u0114\u0001\u0000\u0000"+
		"\u0000\u0117\u0118\u0005\"\u0000\u0000\u0118\u011c\u0006\u001b\u0003\u0000"+
		"\u0119\u011a\u0005\u0000\u0000\u0001\u011a\u011c\u0006\u001b\u0004\u0000"+
		"\u011b\u010b\u0001\u0000\u0000\u0000\u011b\u010d\u0001\u0000\u0000\u0000"+
		"\u011b\u0110\u0001\u0000\u0000\u0000\u011b\u0119\u0001\u0000\u0000\u0000"+
		"\u011c8\u0001\u0000\u0000\u0000\u011d\u011f\u0005\r\u0000\u0000\u011e"+
		"\u011d\u0001\u0000\u0000\u0000\u011e\u011f\u0001\u0000\u0000\u0000\u011f"+
		"\u0120\u0001\u0000\u0000\u0000\u0120\u0121\u0005\n\u0000\u0000\u0121:"+
		"\u0001\u0000\u0000\u0000\u0122\u0123\u0005-\u0000\u0000\u0123\u0124\u0005"+
		"-\u0000\u0000\u0124\u0128\u0001\u0000\u0000\u0000\u0125\u0127\t\u0000"+
		"\u0000\u0000\u0126\u0125\u0001\u0000\u0000\u0000\u0127\u012a\u0001\u0000"+
		"\u0000\u0000\u0128\u0129\u0001\u0000\u0000\u0000\u0128\u0126\u0001\u0000"+
		"\u0000\u0000\u0129\u012d\u0001\u0000\u0000\u0000\u012a\u0128\u0001\u0000"+
		"\u0000\u0000\u012b\u012e\u00039\u001c\u0000\u012c\u012e\u0005\u0000\u0000"+
		"\u0001\u012d\u012b\u0001\u0000\u0000\u0000\u012d\u012c\u0001\u0000\u0000"+
		"\u0000\u012e\u012f\u0001\u0000\u0000\u0000\u012f\u0130\u0006\u001d\u0000"+
		"\u0000\u0130<\u0001\u0000\u0000\u0000\u0131\u0132\u0005;\u0000\u0000\u0132"+
		">\u0001\u0000\u0000\u0000\u0133\u0134\u0005:\u0000\u0000\u0134@\u0001"+
		"\u0000\u0000\u0000\u0135\u0136\u0005,\u0000\u0000\u0136B\u0001\u0000\u0000"+
		"\u0000\u0137\u0138\u0005<\u0000\u0000\u0138\u0139\u0005-\u0000\u0000\u0139"+
		"D\u0001\u0000\u0000\u0000\u013a\u013b\u0005=\u0000\u0000\u013bF\u0001"+
		"\u0000\u0000\u0000\u013c\u013d\u0005(\u0000\u0000\u013dH\u0001\u0000\u0000"+
		"\u0000\u013e\u013f\u0005)\u0000\u0000\u013fJ\u0001\u0000\u0000\u0000\u0140"+
		"\u0141\u0005{\u0000\u0000\u0141L\u0001\u0000\u0000\u0000\u0142\u0143\u0005"+
		"}\u0000\u0000\u0143N\u0001\u0000\u0000\u0000\u0144\u0145\u0005+\u0000"+
		"\u0000\u0145P\u0001\u0000\u0000\u0000\u0146\u0147\u0005-\u0000\u0000\u0147"+
		"R\u0001\u0000\u0000\u0000\u0148\u0149\u0005*\u0000\u0000\u0149T\u0001"+
		"\u0000\u0000\u0000\u014a\u014b\u0005/\u0000\u0000\u014bV\u0001\u0000\u0000"+
		"\u0000\u014c\u014d\u0005<\u0000\u0000\u014dX\u0001\u0000\u0000\u0000\u014e"+
		"\u014f\u0005<\u0000\u0000\u014f\u0150\u0005=\u0000\u0000\u0150Z\u0001"+
		"\u0000\u0000\u0000\u0151\u0152\u0005~\u0000\u0000\u0152\\\u0001\u0000"+
		"\u0000\u0000\u0153\u0154\u0005(\u0000\u0000\u0154\u0155\u0005*\u0000\u0000"+
		"\u0155\u015a\u0001\u0000\u0000\u0000\u0156\u0159\u0003].\u0000\u0157\u0159"+
		"\t\u0000\u0000\u0000\u0158\u0156\u0001\u0000\u0000\u0000\u0158\u0157\u0001"+
		"\u0000\u0000\u0000\u0159\u015c\u0001\u0000\u0000\u0000\u015a\u015b\u0001"+
		"\u0000\u0000\u0000\u015a\u0158\u0001\u0000\u0000\u0000\u015b\u0163\u0001"+
		"\u0000\u0000\u0000\u015c\u015a\u0001\u0000\u0000\u0000\u015d\u015e\u0005"+
		"\u0000\u0000\u0001\u015e\u0164\u0006.\u0005\u0000\u015f\u0160\u0005*\u0000"+
		"\u0000\u0160\u0161\u0005)\u0000\u0000\u0161\u0162\u0001\u0000\u0000\u0000"+
		"\u0162\u0164\u0006.\u0006\u0000\u0163\u015d\u0001\u0000\u0000\u0000\u0163"+
		"\u015f\u0001\u0000\u0000\u0000\u0164^\u0001\u0000\u0000\u0000\u0165\u0166"+
		"\u0005*\u0000\u0000\u0166\u0167\u0005)\u0000\u0000\u0167\u0168\u0001\u0000"+
		"\u0000\u0000\u0168\u0169\u0006/\u0007\u0000\u0169`\u0001\u0000\u0000\u0000"+
		"\u016a\u016b\t\u0000\u0000\u0000\u016b\u016c\u00060\b\u0000\u016cb\u0001"+
		"\u0000\u0000\u0000\u0013\u0000f\u0089\u00a8\u00aa\u00ad\u00f6\u00f8\u00fe"+
		"\u0106\u0108\u0114\u011b\u011e\u0128\u012d\u0158\u015a\u0163\t\u0006\u0000"+
		"\u0000\u0001\u001b\u0000\u0001\u001b\u0001\u0001\u001b\u0002\u0001\u001b"+
		"\u0003\u0001.\u0004\u0001.\u0005\u0001/\u0006\u00010\u0007";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}